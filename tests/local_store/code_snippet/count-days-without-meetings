{"data":{"question":{"codeSnippets":[{"lang":"C++","code":"class Solution {\npublic:\n    int countDays(int days, vector<vector<int>>& meetings) {\n        \n    }\n};"},{"lang":"Java","code":"class Solution {\n    public int countDays(int days, int[][] meetings) {\n        \n    }\n}"},{"lang":"Python","code":"class Solution(object):\n    def countDays(self, days, meetings):\n        \"\"\"\n        :type days: int\n        :type meetings: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "},{"lang":"Python3","code":"class Solution:\n    def countDays(self, days: int, meetings: List[List[int]]) -> int:\n        "},{"lang":"C","code":"int countDays(int days, int** meetings, int meetingsSize, int* meetingsColSize) {\n    \n}"},{"lang":"C#","code":"public class Solution {\n    public int CountDays(int days, int[][] meetings) {\n        \n    }\n}"},{"lang":"JavaScript","code":"/**\n * @param {number} days\n * @param {number[][]} meetings\n * @return {number}\n */\nvar countDays = function(days, meetings) {\n    \n};"},{"lang":"TypeScript","code":"function countDays(days: number, meetings: number[][]): number {\n    \n};"},{"lang":"PHP","code":"class Solution {\n\n    /**\n     * @param Integer $days\n     * @param Integer[][] $meetings\n     * @return Integer\n     */\n    function countDays($days, $meetings) {\n        \n    }\n}"},{"lang":"Swift","code":"class Solution {\n    func countDays(_ days: Int, _ meetings: [[Int]]) -> Int {\n        \n    }\n}"},{"lang":"Kotlin","code":"class Solution {\n    fun countDays(days: Int, meetings: Array<IntArray>): Int {\n        \n    }\n}"},{"lang":"Dart","code":"class Solution {\n  int countDays(int days, List<List<int>> meetings) {\n    \n  }\n}"},{"lang":"Go","code":"func countDays(days int, meetings [][]int) int {\n    \n}"},{"lang":"Ruby","code":"# @param {Integer} days\n# @param {Integer[][]} meetings\n# @return {Integer}\ndef count_days(days, meetings)\n    \nend"},{"lang":"Scala","code":"object Solution {\n    def countDays(days: Int, meetings: Array[Array[Int]]): Int = {\n        \n    }\n}"},{"lang":"Rust","code":"impl Solution {\n    pub fn count_days(days: i32, meetings: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"},{"lang":"Racket","code":"(define/contract (count-days days meetings)\n  (-> exact-integer? (listof (listof exact-integer?)) exact-integer?)\n  )"},{"lang":"Erlang","code":"-spec count_days(Days :: integer(), Meetings :: [[integer()]]) -> integer().\ncount_days(Days, Meetings) ->\n  ."},{"lang":"Elixir","code":"defmodule Solution do\n  @spec count_days(days :: integer, meetings :: [[integer]]) :: integer\n  def count_days(days, meetings) do\n    \n  end\nend"}]}}}